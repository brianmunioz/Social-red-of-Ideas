{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\brian\\\\Documents\\\\Frontend\\\\ideasapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brian\\\\Documents\\\\Frontend\\\\ideasapp\\\\src\\\\views\\\\misIdeas\\\\CrearEditarForm.jsx\";\n\nimport React, { useState, useParams, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nvar CrearEditarForm = function CrearEditarForm() {\n  var _useParams = useParams(),\n      ideaID = _useParams.ideaID;\n\n  console.log('id: ' + ideaID);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      descripcion = _useState2[0],\n      setDescripcion = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      idea = _useState4[0],\n      setIdea = _useState4[1];\n\n  var token = document.cookie.replace('token=', '');\n\n  if (ideaID) {\n    console.log(ideaID);\n    useEffect(function () {\n      axios.get('http://localhost:5000/v1/api/idea/' + ideaID).then(function (dat) {\n        setIdea(dat.data.idea);\n        setDescripcion(dat.data.description);\n      }).catch(console.log);\n    }, []);\n  }\n\n  var editar = function editar(e) {\n    e.preventDefault();\n    axios.patch('http://localhost:5000/v1/api/idea/' + ideaID, {\n      idea: idea,\n      description: descripcion\n    }, {\n      headers: {\n        'authorization': token\n      }\n    });\n  };\n\n  var crearIdea = function crearIdea(e) {\n    axios.post('http://localhost:5000/v1/api/idea', {\n      idea: idea,\n      description: descripcion,\n      author: localStorage.getItem('user'),\n      comments: []\n    }, {\n      headers: {\n        'authorization': token\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, ideaID ? 'Editar idea' : 'Crear nueva idea'), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: ideaID === 'editar' ? editar : crearIdea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Titulo de la idea\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"idea\",\n    value: idea,\n    onChange: function onChange(e) {\n      return setIdea(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Descripcion de la idea\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"descripcion\",\n    value: descripcion,\n    onChange: function onChange(e) {\n      return setDescripcion(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default CrearEditarForm;","map":{"version":3,"names":["React","useState","useParams","useEffect","Form","Button","axios","CrearEditarForm","ideaID","console","log","descripcion","setDescripcion","idea","setIdea","token","document","cookie","replace","get","then","dat","data","description","catch","editar","e","preventDefault","patch","headers","crearIdea","post","author","localStorage","getItem","comments","target","value"],"sources":["C:/Users/brian/Documents/Frontend/ideasapp/src/views/misIdeas/CrearEditarForm.jsx"],"sourcesContent":["import React, { useState, useParams, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CrearEditarForm = () => {\r\n  let { ideaID } = useParams();\r\n  console.log('id: ' + ideaID);\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [idea, setIdea] = useState('');\r\n\r\n  const token = document.cookie.replace('token=', '');\r\n\r\n\r\n  if (ideaID) {\r\n    console.log(ideaID)\r\n\r\n    useEffect(() => {\r\n      axios.get('http://localhost:5000/v1/api/idea/' + ideaID)\r\n        .then(dat => {\r\n          setIdea(dat.data.idea);\r\n          setDescripcion(dat.data.description);\r\n        })\r\n        .catch(console.log)\r\n    }, [])\r\n  }\r\n  const editar = (e) => {\r\n    e.preventDefault();\r\n    axios.patch('http://localhost:5000/v1/api/idea/' + ideaID, {\r\n      idea: idea,\r\n      description: descripcion,\r\n\r\n    }, {\r\n      headers: {\r\n        'authorization': token\r\n      }\r\n    })\r\n\r\n  }\r\n  const crearIdea = (e) => {\r\n\r\n    axios.post('http://localhost:5000/v1/api/idea', {\r\n      idea: idea,\r\n      description: descripcion,\r\n      author: localStorage.getItem('user'),\r\n      comments: []\r\n    }, {\r\n      headers: {\r\n        'authorization': token\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>{ideaID ? ('Editar idea') : ('Crear nueva idea')}</h1>\r\n      <Form onSubmit={ideaID === 'editar' ? (editar) : (crearIdea)}>\r\n\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Label>Titulo de la idea</Form.Label>\r\n          <Form.Control type=\"text\" name=\"idea\" value={idea} onChange={(e) => setIdea(e.target.value)} />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Descripcion de la idea</Form.Label>\r\n          <Form.Control type=\"text\" name=\"descripcion\" value={descripcion} onChange={(e) => setDescripcion(e.target.value)} />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrearEditarForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}