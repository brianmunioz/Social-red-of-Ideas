{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\brian\\\\Documents\\\\Frontend\\\\ideasapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brian\\\\Documents\\\\Frontend\\\\ideasapp\\\\src\\\\views\\\\misIdeas\\\\CrearEditarForm.jsx\";\n\nimport React, { useState, useParams, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nvar CrearEditarForm = function CrearEditarForm(props) {\n  console.log(props.modo);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      descripcion = _useState2[0],\n      setDescripcion = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      idea = _useState4[0],\n      setIdea = _useState4[1];\n\n  var _useParams = useParams(),\n      ideaID = _useParams.ideaID;\n\n  var token = document.cookie.replace('token=', '');\n\n  if (modo === 'editar') {\n    console.log(ideaID);\n    useEffect(function () {\n      axios.get('http://localhost:5000/v1/api/idea/' + ideaID).then(function (dat) {\n        setIdea(dat.data.idea);\n        setDescripcion(dat.data.description);\n      }).catch(console.log);\n    }, []);\n  }\n\n  var editar = function editar(e) {\n    e.preventDefault();\n    axios.patch('http://localhost:5000/v1/api/idea/' + ideaID, {\n      idea: idea,\n      description: descripcion\n    }, {\n      headers: {\n        'authorization': token\n      }\n    });\n  };\n\n  var crearIdea = function crearIdea(e) {\n    axios.post('http://localhost:5000/v1/api/idea', {\n      idea: idea,\n      description: descripcion,\n      author: localStorage.getItem('user'),\n      comments: []\n    }, {\n      headers: {\n        'authorization': token\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, modo === 'editar' ? 'Editar idea' : 'Crear nueva idea'), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: modo === 'editar' ? editar : crearIdea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Titulo de la idea\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"idea\",\n    value: idea,\n    onChange: function onChange(e) {\n      return setIdea(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Descripcion de la idea\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"descripcion\",\n    value: descripcion,\n    onChange: function onChange(e) {\n      return setDescripcion(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Submit\")));\n};\n\nexport default CrearEditarForm;","map":{"version":3,"names":["React","useState","useParams","useEffect","Form","Button","axios","CrearEditarForm","props","console","log","modo","descripcion","setDescripcion","idea","setIdea","ideaID","token","document","cookie","replace","get","then","dat","data","description","catch","editar","e","preventDefault","patch","headers","crearIdea","post","author","localStorage","getItem","comments","target","value"],"sources":["C:/Users/brian/Documents/Frontend/ideasapp/src/views/misIdeas/CrearEditarForm.jsx"],"sourcesContent":["import React,{useState,useParams,useEffect} from 'react';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CrearEditarForm = props => {\r\n  console.log(props.modo);\r\nconst [descripcion,setDescripcion] = useState('');\r\nconst [idea,setIdea] = useState('');\r\nlet {ideaID} = useParams();\r\nconst token = document.cookie.replace('token=', '');\r\n\r\n\r\nif( modo === 'editar'){\r\n    console.log(ideaID)\r\n\r\n    useEffect(()=>{\r\n      axios.get('http://localhost:5000/v1/api/idea/'+ideaID)\r\n      .then(dat => {\r\n       setIdea(dat.data.idea);  \r\n       setDescripcion(dat.data.description);\r\n      })\r\n      .catch(console.log)\r\n    },[])\r\n}\r\n    const editar = (e)=>{\r\n        e.preventDefault();\r\n        axios.patch('http://localhost:5000/v1/api/idea/'+ideaID,{\r\n          idea: idea,\r\n          description: descripcion,\r\n        \r\n      },{\r\n          headers: {\r\n              'authorization': token\r\n          }\r\n      })\r\n\r\n    }\r\n    const crearIdea = (e)=>{\r\n\r\n        axios.post('http://localhost:5000/v1/api/idea',{\r\n            idea: idea,\r\n            description: descripcion,\r\n            author: localStorage.getItem('user'),\r\n            comments: []\r\n        },{\r\n            headers: {\r\n                'authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n        <h1>{modo==='editar' ? ('Editar idea'): ('Crear nueva idea')}</h1>\r\n    <Form  onSubmit={modo === 'editar' ? (editar):(crearIdea)}>\r\n        \r\n    <Form.Group className=\"mb-3\" >\r\n      <Form.Label>Titulo de la idea</Form.Label>\r\n      <Form.Control type=\"text\" name=\"idea\"  value={idea} onChange={(e) => setIdea(e.target.value)}/>\r\n      <Form.Text className=\"text-muted\">\r\n        We'll never share your email with anyone else.\r\n      </Form.Text>\r\n    </Form.Group>\r\n\r\n    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n      <Form.Label>Descripcion de la idea</Form.Label>\r\n      <Form.Control type=\"text\" name=\"descripcion\"  value={descripcion} onChange={(e) => setDescripcion(e.target.value)}/>\r\n    </Form.Group>\r\n \r\n    <Button variant=\"primary\" type=\"submit\">\r\n      Submit\r\n    </Button>\r\n  </Form>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default CrearEditarForm"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAAQC,IAAR,EAAaC,MAAb,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;EAC/BC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;;EAD+B,gBAEIV,QAAQ,CAAC,EAAD,CAFZ;EAAA;EAAA,IAE1BW,WAF0B;EAAA,IAEdC,cAFc;;EAAA,iBAGVZ,QAAQ,CAAC,EAAD,CAHE;EAAA;EAAA,IAG1Ba,IAH0B;EAAA,IAGrBC,OAHqB;;EAAA,iBAIlBb,SAAS,EAJS;EAAA,IAI5Bc,MAJ4B,cAI5BA,MAJ4B;;EAKjC,IAAMC,KAAK,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,OAAhB,CAAwB,QAAxB,EAAkC,EAAlC,CAAd;;EAGA,IAAIT,IAAI,KAAK,QAAb,EAAsB;IAClBF,OAAO,CAACC,GAAR,CAAYM,MAAZ;IAEAb,SAAS,CAAC,YAAI;MACZG,KAAK,CAACe,GAAN,CAAU,uCAAqCL,MAA/C,EACCM,IADD,CACM,UAAAC,GAAG,EAAI;QACZR,OAAO,CAACQ,GAAG,CAACC,IAAJ,CAASV,IAAV,CAAP;QACAD,cAAc,CAACU,GAAG,CAACC,IAAJ,CAASC,WAAV,CAAd;MACA,CAJD,EAKCC,KALD,CAKOjB,OAAO,CAACC,GALf;IAMD,CAPQ,EAOP,EAPO,CAAT;EAQH;;EACG,IAAMiB,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAK;IAChBA,CAAC,CAACC,cAAF;IACAvB,KAAK,CAACwB,KAAN,CAAY,uCAAqCd,MAAjD,EAAwD;MACtDF,IAAI,EAAEA,IADgD;MAEtDW,WAAW,EAAEb;IAFyC,CAAxD,EAIA;MACEmB,OAAO,EAAE;QACL,iBAAiBd;MADZ;IADX,CAJA;EAUH,CAZD;;EAaA,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACJ,CAAD,EAAK;IAEnBtB,KAAK,CAAC2B,IAAN,CAAW,mCAAX,EAA+C;MAC3CnB,IAAI,EAAEA,IADqC;MAE3CW,WAAW,EAAEb,WAF8B;MAG3CsB,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAHmC;MAI3CC,QAAQ,EAAE;IAJiC,CAA/C,EAKE;MACEN,OAAO,EAAE;QACL,iBAAiBd;MADZ;IADX,CALF;EAUH,CAZD;;EAeF,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKN,IAAI,KAAG,QAAP,GAAmB,aAAnB,GAAoC,kBAAzC,CADJ,eAEA,oBAAC,IAAD;IAAO,QAAQ,EAAEA,IAAI,KAAK,QAAT,GAAqBgB,MAArB,GAA8BK,SAA/C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEA,oBAAC,IAAD,CAAM,KAAN;IAAY,SAAS,EAAC,MAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD,CAAM,KAAN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;IAAc,IAAI,EAAC,MAAnB;IAA0B,IAAI,EAAC,MAA/B;IAAuC,KAAK,EAAElB,IAA9C;IAAoD,QAAQ,EAAE,kBAACc,CAAD;MAAA,OAAOb,OAAO,CAACa,CAAC,CAACU,MAAF,CAASC,KAAV,CAAd;IAAA,CAA9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,IAAD,CAAM,IAAN;IAAW,SAAS,EAAC,YAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oDAHF,CAFA,eAUA,oBAAC,IAAD,CAAM,KAAN;IAAY,SAAS,EAAC,MAAtB;IAA6B,SAAS,EAAC,mBAAvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD,CAAM,KAAN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BADF,eAEE,oBAAC,IAAD,CAAM,OAAN;IAAc,IAAI,EAAC,MAAnB;IAA0B,IAAI,EAAC,aAA/B;IAA8C,KAAK,EAAE3B,WAArD;IAAkE,QAAQ,EAAE,kBAACgB,CAAD;MAAA,OAAOf,cAAc,CAACe,CAAC,CAACU,MAAF,CAASC,KAAV,CAArB;IAAA,CAA5E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CAVA,eAeA,oBAAC,MAAD;IAAQ,OAAO,EAAC,SAAhB;IAA0B,IAAI,EAAC,QAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAfA,CAFA,CADF;AAwBD,CAxED;;AA0EA,eAAehC,eAAf"},"metadata":{},"sourceType":"module"}