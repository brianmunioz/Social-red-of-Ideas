{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Documents\\\\Frontend\\\\ideasapp\\\\src\\\\componentes\\\\Error.jsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Error(props) {\n  var show = true;\n\n  var setShow = function setShow() {\n    if (show === true) {\n      show = false;\n    } else {\n      show = true;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, props.error)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Save Changes\"))));\n}\n\nexport default Error;","map":{"version":3,"names":["React","Button","Modal","Error","props","show","setShow","error"],"sources":["C:/Users/brian/Documents/Frontend/ideasapp/src/componentes/Error.jsx"],"sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction Error(props) {\r\n\r\n  let show = true;\r\n  \r\n  const setShow = ()=>{\r\n    if(show === true){\r\n      show = false;\r\n    }else{\r\n      show = true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n   \r\n\r\n      <Modal show={show} onHide={setShow}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.error}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={setShow}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={setShow}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAEpB,IAAIC,IAAI,GAAG,IAAX;;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAI;IAClB,IAAGD,IAAI,KAAK,IAAZ,EAAiB;MACfA,IAAI,GAAG,KAAP;IACD,CAFD,MAEK;MACHA,IAAI,GAAG,IAAP;IACD;EACF,CAND;;EAQA,oBACE,uDAGE,oBAAC,KAAD;IAAO,IAAI,EAAEA,IAAb;IAAmB,MAAM,EAAEC,OAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD,CAAO,MAAP;IAAc,WAAW,MAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD,CAAO,KAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAcF,KAAK,CAACG,KAApB,CADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kDAJF,eAKE,oBAAC,KAAD,CAAO,MAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,OAAO,EAAED,OAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADF,eAIE,oBAAC,MAAD;IAAQ,OAAO,EAAC,SAAhB;IAA0B,OAAO,EAAEA,OAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAJF,CALF,CAHF,CADF;AAoBD;;AAED,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}